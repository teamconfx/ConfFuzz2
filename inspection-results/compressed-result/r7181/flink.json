[
    {
        "status": "FP",
        "bugId": [],
        "testClass": "org.apache.flink.api.java.typeutils.runtime.kryo.KryoWithCustomSerializersTest",
        "testMethod": "testJodaTime",
        "failure": "java.lang.UnsupportedOperationException",
        "errorMessage": "Generic types have been disabled in the ExecutionConfig and type java.util.HashSet is treated as a generic type.",
        "stackTrace": [
            "org.apache.flink.api.java.typeutils.GenericTypeInfo.createSerializer(GenericTypeInfo.java:87)",
            "org.apache.flink.api.java.typeutils.runtime.kryo.KryoWithCustomSerializersTest.createSerializer(KryoWithCustomSerializersTest.java:55)",
            "org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest.runTests(AbstractGenericTypeSerializerTest.java:190)",
            "org.apache.flink.api.java.typeutils.runtime.kryo.KryoWithCustomSerializersTest.testJodaTime(KryoWithCustomSerializersTest.java:47)",
            "org.apache.flink.api.java.typeutils.runtime.kryo.KryoWithCustomSerializersTest.testJodaTime$$CONFUZZ(KryoWithCustomSerializersTest.java)",
            "java.base/java.lang.reflect.Method.invoke(Method.java:566)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)",
            "edu.berkeley.cs.jqf.fuzz.junit.TrialRunner$1.evaluate(TrialRunner.java:59)",
            "org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)",
            "edu.berkeley.cs.jqf.fuzz.junit.TrialRunner.run(TrialRunner.java:65)",
            "edu.illinois.confuzz.internal.ConfuzzGuidance.run(ConfuzzGuidance.java:100)",
            "edu.berkeley.cs.jqf.fuzz.junit.quickcheck.FuzzStatement.evaluate(FuzzStatement.java:144)",
            "org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)",
            "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)",
            "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)",
            "org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)",
            "org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)",
            "org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:413)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "edu.berkeley.cs.jqf.fuzz.junit.GuidedFuzzing.run(GuidedFuzzing.java:208)",
            "edu.illinois.confuzz.internal.FuzzForkMain.main(FuzzForkMain.java:39)"
        ],
        "reproStatus": "REPRODUCIBLE",
        "minConfig": {
            "pipeline.generic-types": "false"
        }
    },
    {
        "status": "FP",
        "bugId": [],
        "testClass": "org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest",
        "testMethod": "testSerializability",
        "failure": "java.lang.AssertionError",
        "errorMessage": "Generic types have been disabled in the ExecutionConfig and type org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest$MyPOJO is treated as a generic type.",
        "stackTrace": [
            "org.junit.Assert.fail(Assert.java:89)",
            "org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest.testSerializability(TypeInformationSerializationSchemaTest.java:76)",
            "org.apache.flink.api.common.serialization.TypeInformationSerializationSchemaTest.testSerializability$$CONFUZZ(TypeInformationSerializationSchemaTest.java)",
            "java.base/java.lang.reflect.Method.invoke(Method.java:566)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)",
            "edu.berkeley.cs.jqf.fuzz.junit.TrialRunner$1.evaluate(TrialRunner.java:59)",
            "org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)",
            "edu.berkeley.cs.jqf.fuzz.junit.TrialRunner.run(TrialRunner.java:65)",
            "edu.illinois.confuzz.internal.ConfuzzGuidance.run(ConfuzzGuidance.java:100)",
            "edu.berkeley.cs.jqf.fuzz.junit.quickcheck.FuzzStatement.evaluate(FuzzStatement.java:144)",
            "org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)",
            "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)",
            "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)",
            "org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)",
            "org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)",
            "org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:413)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "edu.berkeley.cs.jqf.fuzz.junit.GuidedFuzzing.run(GuidedFuzzing.java:208)",
            "edu.illinois.confuzz.internal.FuzzForkMain.main(FuzzForkMain.java:39)"
        ],
        "reproStatus": "REPRODUCIBLE",
        "minConfig": {
            "pipeline.generic-types": "false"
        }
    },
    {
        "status": "FP",
        "bugId": [],
        "testClass": "org.apache.flink.api.common.io.GenericCsvInputFormatTest",
        "testMethod": "testReadInvalidContentsLenientWithSkipping",
        "failure": "java.lang.AssertionError",
        "errorMessage": "Test failed due to a IllegalStateException: Shutdown in progress",
        "stackTrace": [
            "org.junit.Assert.fail(Assert.java:89)",
            "org.apache.flink.api.common.io.GenericCsvInputFormatTest.testReadInvalidContentsLenientWithSkipping(GenericCsvInputFormatTest.java:597)",
            "org.apache.flink.api.common.io.GenericCsvInputFormatTest.testReadInvalidContentsLenientWithSkipping$$CONFUZZ(GenericCsvInputFormatTest.java)",
            "java.base/java.lang.reflect.Method.invoke(Method.java:566)",
            "org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)",
            "org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)",
            "org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)",
            "edu.berkeley.cs.jqf.fuzz.junit.TrialRunner$1.evaluate(TrialRunner.java:59)",
            "org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)",
            "org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)",
            "org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)",
            "edu.berkeley.cs.jqf.fuzz.junit.TrialRunner.run(TrialRunner.java:65)",
            "edu.illinois.confuzz.internal.ConfuzzGuidance.run(ConfuzzGuidance.java:100)",
            "edu.berkeley.cs.jqf.fuzz.junit.quickcheck.FuzzStatement.evaluate(FuzzStatement.java:144)",
            "org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)",
            "org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)",
            "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)",
            "org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)",
            "org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)",
            "org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)",
            "org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)",
            "org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)",
            "org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)",
            "org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)",
            "org.junit.runners.ParentRunner.run(ParentRunner.java:413)",
            "org.junit.runner.JUnitCore.run(JUnitCore.java:137)",
            "edu.berkeley.cs.jqf.fuzz.junit.GuidedFuzzing.run(GuidedFuzzing.java:208)",
            "edu.illinois.confuzz.internal.FuzzForkMain.main(FuzzForkMain.java:39)"
        ],
        "reproStatus": "REPRODUCIBLE",
        "minConfig": {
            "taskmanager.runtime.fs_timeout": "72"
        }
    },
    {
        "status": "FP",
        "bugId": [],
        "testClass": "org.apache.flink.api.common.state.StateDescriptorTest",
        "testMethod": "testSerializerLazyInitializeInParallel",
        "failure": "java.lang.RuntimeException",
        "errorMessage": "Could not load the AvroSerializer class. You may be missing the 'flink-avro' dependency.",
        "stackTrace": [
            "org.apache.flink.api.java.typeutils.AvroUtils$DefaultAvroUtils.createAvroSerializer(AvroUtils.java:120)",
            "org.apache.flink.api.java.typeutils.PojoTypeInfo.createSerializer(PojoTypeInfo.java:339)",
            "org.apache.flink.api.common.state.StateDescriptor.initializeSerializerUnlessSet(StateDescriptor.java:311)",
            "org.apache.flink.api.common.state.StateDescriptorTest$1.go(StateDescriptorTest.java:239)",
            "org.apache.flink.core.testutils.CheckedThread.run(CheckedThread.java:67)"
        ],
        "reproStatus": "REPRODUCIBLE",
        "minConfig": {
            "pipeline.force-avro": "true"
        }
    }
]